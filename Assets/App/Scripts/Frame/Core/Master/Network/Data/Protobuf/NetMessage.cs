/* *
 * ===============================================
 * author      : Josh@win
 * e-mail      : shijun_z@163.com
 * create time : 2025年6月19 15:30
 * function    : 
 * ===============================================
 * */
// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: proto/NetMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from proto/NetMessage.proto</summary>
public static partial class NetMessageReflection {

  #region Descriptor
  /// <summary>File descriptor for proto/NetMessage.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static NetMessageReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChZwcm90by9OZXRNZXNzYWdlLnByb3RvIiEKC0NTSGVhcnRCZWF0EhIKCmNs",
          "aWVudFRpbWUYASABKAMiNQoLU0NIZWFydEJlYXQSEgoKY2xpZW50VGltZRgB",
          "IAEoAxISCgpzZXJ2ZXJUaW1lGAIgASgDYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::CSHeartBeat), global::CSHeartBeat.Parser, new[]{ "ClientTime" }, null, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::SCHeartBeat), global::SCHeartBeat.Parser, new[]{ "ClientTime", "ServerTime" }, null, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// 心跳
/// </summary>
public sealed partial class CSHeartBeat : pb::IMessage<CSHeartBeat> {
  private static readonly pb::MessageParser<CSHeartBeat> _parser = new pb::MessageParser<CSHeartBeat>(() => new CSHeartBeat());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<CSHeartBeat> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetMessageReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSHeartBeat() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSHeartBeat(CSHeartBeat other) : this() {
    clientTime_ = other.clientTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public CSHeartBeat Clone() {
    return new CSHeartBeat(this);
  }

  /// <summary>Field number for the "clientTime" field.</summary>
  public const int ClientTimeFieldNumber = 1;
  private long clientTime_;
  /// <summary>
  ///客户端时间 毫秒
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ClientTime {
    get { return clientTime_; }
    set {
      clientTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as CSHeartBeat);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(CSHeartBeat other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientTime != other.ClientTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClientTime != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ClientTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClientTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(CSHeartBeat other) {
    if (other == null) {
      return;
    }
    if (other.ClientTime != 0L) {
      ClientTime = other.ClientTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

/// <summary>
/// 心跳回调
/// </summary>
public sealed partial class SCHeartBeat : pb::IMessage<SCHeartBeat> {
  private static readonly pb::MessageParser<SCHeartBeat> _parser = new pb::MessageParser<SCHeartBeat>(() => new SCHeartBeat());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<SCHeartBeat> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::NetMessageReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCHeartBeat() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCHeartBeat(SCHeartBeat other) : this() {
    clientTime_ = other.clientTime_;
    serverTime_ = other.serverTime_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public SCHeartBeat Clone() {
    return new SCHeartBeat(this);
  }

  /// <summary>Field number for the "clientTime" field.</summary>
  public const int ClientTimeFieldNumber = 1;
  private long clientTime_;
  /// <summary>
  ///客户端时间 毫秒
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ClientTime {
    get { return clientTime_; }
    set {
      clientTime_ = value;
    }
  }

  /// <summary>Field number for the "serverTime" field.</summary>
  public const int ServerTimeFieldNumber = 2;
  private long serverTime_;
  /// <summary>
  ///客户端时间 毫秒
  /// </summary>
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public long ServerTime {
    get { return serverTime_; }
    set {
      serverTime_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as SCHeartBeat);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(SCHeartBeat other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (ClientTime != other.ClientTime) return false;
    if (ServerTime != other.ServerTime) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (ClientTime != 0L) hash ^= ClientTime.GetHashCode();
    if (ServerTime != 0L) hash ^= ServerTime.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (ClientTime != 0L) {
      output.WriteRawTag(8);
      output.WriteInt64(ClientTime);
    }
    if (ServerTime != 0L) {
      output.WriteRawTag(16);
      output.WriteInt64(ServerTime);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (ClientTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ClientTime);
    }
    if (ServerTime != 0L) {
      size += 1 + pb::CodedOutputStream.ComputeInt64Size(ServerTime);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(SCHeartBeat other) {
    if (other == null) {
      return;
    }
    if (other.ClientTime != 0L) {
      ClientTime = other.ClientTime;
    }
    if (other.ServerTime != 0L) {
      ServerTime = other.ServerTime;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          ClientTime = input.ReadInt64();
          break;
        }
        case 16: {
          ServerTime = input.ReadInt64();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
